function New-APIHelperFunction ($ApiResource, $Path) {

    $Verb = Switch ($ApiResource.Method) {
        'GET' { 'Get' }
        'POST' { 'Send' }
        'DELETE' { 'Remove' }
    }

    $ResourceName = (Get-Culture).TextInfo.ToTitleCase($ApiResource.Resource)
    $ResourceNames = ($Resourcename.TrimStart("/").Split("/") | ForEach-Object { "$_".Replace("_","") })
    $ResourceName = $ResourceNames[0] + '_' + ($ResourceNames[1..999] -Join "" -Replace ":", "_")

    $FunctionName = "${Verb}-Twitter${ResourceName}"

    $HelpParameters = @()
    $FunctionParameters = @()
    ForEach ($Parameter in $ApiResource.ReferenceProperties.Parameters) {
        $HelpParameters += ".PARAMETER $($Parameter.Name)"
        $HelpParameters += "    $($Parameter.Description)`r`n"
        $FunctionParameters += "[string]`$$(($Parameter.Name -Split " " -Split "\.")[0])"
    }

$FunctionString = @"
function ${FunctionName} {
<#
.SYNOPSIS
    $($ApiResource.ReferenceProperties.fDescription)

.DESCRIPTION
    $($ApiResource.ReferenceProperties.Description -Split "`r`n" -Join "`r`n    ")

$($HelpParameters -Join "`r`n")
.NOTES
    This helper function was generated by the information provided here:
    $($ApiResource.ReferenceUrl)

#>
    [CmdletBinding()]
    Param(
        $($FunctionParameters -Join ",`r`n        ")
    )
    Begin {

        [hashtable]`$Parameters = `$PSBoundParameters
                   `$CmdletBindingParameters | ForEach-Object { `$Parameters.Remove(`$_) }

        [string]`$Method      = '$($ApiResource.Method)'
        [string]`$Resource    = '$($ApiResource.Resource)'
        [string]`$ResourceUrl = '$($ApiResource.ReferenceProperties.ResourceUrl)'

    }
    Process {

        # Find & Replace any ResourceUrl parameters.
        `$UrlParameters = [regex]::Matches(`$ResourceUrl, '(?<!\w):\w+')
        ForEach (`$UrlParameter in `$UrlParameters) {
            `$UrlParameterValue = `$Parameters["`$(`$UrlParameter.Value.TrimStart(":"))"]
            `$ResourceUrl = `$ResourceUrl -Replace `$UrlParameter.Value, `$UrlParameterValue
        }

        `$OAuthSettings = Get-TwitterOAuthSettings -Resource `$Resource
        Invoke-TwitterAPI -Method `$Method -ResourceUrl `$ResourceUrl -Parameters `$Parameters -OAuthSettings `$OAuthSettings

    }
    End {

    }
}
"@

    $FunctionString | Set-Content "${Path}\${FunctionName}.ps1" -Encoding UTF8

}

$Path = New-Item -Path '.\helper' -ItemType Directory -Force

$ApiResources = Get-Content ".\twitter_api.json" | ConvertFrom-Json

ForEach ($ApiResource in ($ApiResources | Where-Object { $_.ReferenceProperties.ResourceUrl })) {
    #if ($ApiResource.Resource -ne '/account/settings') { Continue } ## Used for Debuging
    Write-Warning "New-APIHelperFunction: $($ApiResource.Resource)"
    New-APIHelperFunction -ApiResource $ApiResource -Path $Path
}

